{"version":3,"sources":["utils/cacheApi.js","utils/service.js","components/Header/index.js","components/Loader/index.jsx","utils/imageCache.js","components/UserCard/index.jsx","components/CommentsCard/index.jsx","components/UserProfile/index.jsx","components/ActiveUserList/index.jsx","components/SearchBar/index.jsx","App.jsx","index.jsx"],"names":["dataSourceCache","Map","createDataSource","fetchId","fetch","getData","key","input","has","dataSource","promise","status","value","then","data","error","set","read","result","get","prefetch","promiseTimeout","time","Promise","resolve","reject","setTimeout","customFetch","url","a","async","timeout","response","json","jsonData","Math","random","Header","className","Loader","loadImage","source","image","Image","onload","onerror","console","src","cacheImage","MySuspenseImage","props","alt","onClick","undefined","UserCard","isSelected","fallback","userData","id","handleUserData","name","userName","isPending","comments","posts","map","comment","index","body","email","loadUserPosts","userId","UserProfile","log","useState","postData","setPosts","useEffect","revealOrder","tail","UserDetails","CommentsCard","user","company","loadUserData","SUSPENSE_CONFIG","timeoutMs","ActiveUsersList","friends","useData","userListData","setData","useTransition","startTransition","Date","now","activeUserId","setActiveUserId","handleActiveUserId","setUserData","useCallback","friend","thumbnailUrl","DataContext","createContext","useContext","App","friendId","floor","slice","commentsList","makeDataSource","context","StrictMode","FallbackComponent","Provider","window","location","pathname","includes","ReactDOM","render","document","getElementById","rootElement","createRoot"],"mappings":"kcAAMA,EAAkB,IAAIC,IAEb,SAASC,EAAiBC,EAASC,GAChD,IAAMC,EAAU,SAACC,EAAKC,GACpB,IAAKP,EAAgBQ,IAAIF,GAAM,CAC7B,IAAMG,EAAa,CACjBC,QAASN,EAAMG,GACfI,OAAQ,UACRC,MAAO,MAETH,EAAWC,QAAQG,MACjB,SAAAC,GACEL,EAAWE,OAAS,WACpBF,EAAWG,MAAQE,KAErB,SAAAC,GACEN,EAAWE,OAAS,QACpBF,EAAWG,MAAQG,KAGvBf,EAAgBgB,IAAIV,EAAKG,KAgC7B,MA5BmB,CACjBQ,KADiB,SACZV,GACH,IAAMD,EAAG,UAAMH,EAAN,YAAiBI,GAC1BF,EAAQC,EAAKC,GACb,IAAMW,EAASlB,EAAgBmB,IAAIb,GACnC,OAAQY,EAAOP,QACb,IAAK,UAEH,MADkBO,EAAOR,QAG3B,IAAK,WAEH,OADcQ,EAAON,MAGvB,IAAK,QAEH,MADcM,EAAON,MAIvB,QACE,SAGNQ,SAvBiB,SAuBRb,GACP,IAAMD,EAAG,UAAMH,EAAN,YAAiBI,GAC1BF,EAAQC,EAAKC,KCjDZ,SAASc,EAAeC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQF,KACPA,MAIP,IACaK,EAAc,SAAOC,GAAP,+BAAAC,EAAAC,OAAA,uDAAYC,EAAZ,+BADT,EACS,WAAAF,EAAA,MACFzB,MAAMwB,IADJ,cACnBI,EADmB,kBAAAH,EAAA,MAEFG,EAASC,QAFP,cAEnBC,EAFmB,kBAAAL,EAAA,MAGnBR,EAAeU,EAA0B,IAAhBI,KAAKC,WAHX,gCAIlBF,GAJkB,uC,MCPZ,SAASG,IACtB,OACE,yBAAKC,UAAU,kBACb,yD,MCHS,SAASC,IACtB,OAAO,yBAAKD,UAAU,Y,YCkBjB,IAAME,EAAY,SAAAC,IAjBlB,SAAoBA,GAczB,OAbiBvC,EAAiBuC,GAAQ,WACxC,OAAO,IAAIlB,SAAQ,SAAAC,GACjB,IAAMkB,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACbpB,EAAQiB,IAEVC,EAAMG,QAAU,SAAA9B,GACd+B,QAAQ/B,MAAMA,GACdS,EAAQT,IAEV2B,EAAMK,IAAMN,SAOhBO,CAAWP,GAAQxB,QAEN,SAASgC,EAAgBC,GAAQ,IACtCH,EAAQG,EAARH,IAIR,OAHW,MAAPA,GACFP,EAAUO,GAGV,yBACET,UAAU,iBACVS,IAAKG,EAAMH,IACXI,IAAKD,EAAMC,IACXC,QAASF,EAAME,QAAUF,EAAME,aAAUC,IC3BhC,SAASC,EAASJ,GAC/B,OACE,yBACEZ,UAAS,6BACPY,EAAMK,WAAa,6BAA+B,GAD3C,MAIT,6BACE,kBAAC,WAAD,CACEC,SACE,yBACElB,UAAS,yBACPY,EAAMK,WAAa,yBAA2B,GADvC,MAIT,kBAAChB,EAAD,QAIJ,yBACED,UAAS,yBACPY,EAAMK,WAAa,yBAA2B,GADvC,MAIT,kBAACN,EAAD,CACEF,IAAG,wCAAmCG,EAAMO,SAASC,GAAK,GAC1DP,IAAI,UACJC,QAAS,WACPF,EAAMS,eAAeT,EAAMO,SAASC,UAM9C,yBAAKpB,UAAU,aACb,6BACGY,EAAMO,SAASG,KAChB,8BAAOV,EAAMO,SAASI,YAG1B,6BACGX,EAAMY,UACL,yBAAKxB,UAAU,kBACb,kBAACC,EAAD,MAAW,KAEX,O,gBCjDG,WAASW,GACtB,IAAMa,EAAWb,EAAMpC,KAAKkD,MAAM/C,OAElC,OACE,yBAAKqB,UAAU,oBACZyB,EAASE,KAAI,SAACC,EAASC,GACtB,OACE,yBAAK7B,UAAU,gBACb,yBAAKA,UAAU,gBAAgB4B,EAAQE,MACvC,yBAAK9B,UAAU,cAAc4B,EAAQG,aCFpCC,G,MAAgB,SAAAC,GAC3B,IAAM9D,EAAa,CACjBuD,MAAO9D,EAAiB,SAAD,OAAUqE,IAAU,oBAAA1C,EAAAC,OAAA,kEAAAD,EAAA,MAC5BF,EAAY,wDAAD,OACkC4C,GACxD,MAHuC,iFAQ7C,OAAO,eAAK9D,KAGC,SAAS+D,EAAYtB,GAClC,IAAMpC,EAAOoC,EAAMO,SACnBX,QAAQ2B,IAAI,QAASvB,GAFoB,MAGZwB,mBAASJ,EAAcpB,EAAMqB,SAHjB,mBAGlCI,EAHkC,KAGxBC,EAHwB,KAUzC,OALA9B,QAAQ2B,IAAI,OAAQvB,EAAMqB,OAAS,GACnCM,qBAAU,WACRD,EAASN,EAAcpB,EAAMqB,WAC5B,CAACrB,EAAMqB,SAGR,yBAAKjC,UAAU,wBACb,yBAAKA,UAAU,WACb,kBAAC,eAAD,CAAcwC,YAAY,WAAWC,KAAK,aACxC,yBAAKzC,UAAU,uBACb,kBAAC,WAAD,CACEkB,SACE,yBAAKlB,UAAU,cACb,kBAACC,EAAD,QAIJ,yBAAKD,UAAU,cACb,kBAACW,EAAD,CACEF,IAAG,wCAAmCG,EAAMqB,OAAS,GACrDpB,IAAI,cAKV,kBAAC,WAAD,CACEK,SACE,6BACE,sDACA,kBAACjB,EAAD,QAIJ,kBAACyC,EAAD,CAAalE,KAAMA,MAGvB,yBAAKwB,UAAU,oBACb,kBAAC,WAAD,CACEkB,SACE,6BACE,uDACA,kBAACjB,EAAD,QAIJ,kBAAC0C,EAAD,CAAcnE,KAAM6D,SASlC,SAASK,EAAY9B,GACnB,IAAMgC,EAAOhC,EAAMpC,KAAKoE,KAAKjE,OAI7B,OAFA6B,QAAQ2B,IAAIS,GAGV,yBAAK5C,UAAU,gBACb,sCAAY4C,EAAKtB,MACjB,uCAAasB,EAAKb,OAClB,yCAAea,EAAKC,QAAQvB,KAA5B,MC1EC,IAAMwB,EAAe,SAAAb,GAC1BzB,QAAQ2B,IAAI,uBAAwBF,GACpC,IAAM9D,EAAa,CACjByE,KAAMhF,EAAiB,QAAD,OAASqE,IAAU,oBAAA1C,EAAAC,OAAA,kEAAAD,EAAA,MAC1BF,EAAY,8CAAD,OACwB4C,GAC9C,MAHqC,iFAQ3C,OAAO,eAAK9D,IAGD4E,EAAkB,CAAEC,UAAW,KAE7B,SAASC,EAAgBrC,GAAQ,IAExCsC,EADiBC,IAAfhF,WACmBiF,aAAazE,OAFK,EAGrByD,mBAASU,EAAa,IAHD,mBAGtCtE,EAHsC,KAGhC6E,EAHgC,OAIRC,wBAAcP,GAJN,mBAItCQ,EAJsC,KAIrB/B,EAJqB,KAM7Ce,qBAAU,kBAAM/B,QAAQ2B,IAAI,qBAAsBqB,KAAKC,SAAQ,IANlB,MAQLrB,mBAAS,GARJ,mBAQtCsB,EARsC,KAQxBC,EARwB,OASRvB,qBATQ,mBAStCH,EATsC,KAS9B2B,EAT8B,KAWvCC,EAAcC,uBAClB,SAAA1C,GACEZ,QAAQ2B,IAAI,mBAAoBf,GAChCwC,EAAmBxC,GAEnBmC,GAAgB,WACdI,EAAgBvC,GAChBiC,EAAQP,EAAa1B,SAGzB,CAACmC,IAQH,OALA/C,QAAQ2B,IAAI,YAAaX,GAEzBhB,QAAQ2B,IAAI,8BAA4B3D,GAExCgC,QAAQ2B,IAAI,iBAAkBuB,GAE5B,yBAAK1D,UAAU,qBACb,yBAAKA,UAAU,eACZkD,EAAQvB,KAAI,SAACoC,EAAQlC,GACpB,OACE,yBAAK7B,UAAU,kBACb,kBAAC,WAAD,CACEkB,SACE,+CACiB,kBAACjB,EAAD,MAAW,MAI9B,kBAACe,EAAD,CACEC,WAAY8C,EAAO3C,KAAOa,EAC1Bd,SAAU4C,EACVC,aAAY,wCAAmCD,EAAO3C,GACpD,GACFC,eAAgBwC,EAChBrC,UAAWA,GAAauC,EAAO3C,KAAOa,UAOjDzD,GACC,kBAAC,WAAD,CAAU0C,SAAUjB,GAClB,yBAAKD,UAAU,wBACb,kBAACkC,EAAD,CAAaf,SAAU3C,EAAMyD,OAAQyB,OCzFjD,ICOMO,EAAcC,wBAAc,MACrBf,EAAU,kBAAMgB,qBAAWF,IA2BzB,SAASG,EAAIxD,GAAQ,IAAD,EACDwB,mBAAS,GADR,mBAC1BiC,EAD0B,aAEGjC,mBA3Bf,SAAAH,GACrB,IAAM9D,EAAa,CACjBiF,aAAcxF,EAAiB,gBAAgB,oBAAA2B,EAAAC,OAAA,kEAAAD,EAAA,MAErCF,EAAY,6CAA8C,IAFrB,mBAGlC,EAAIQ,KAAKyE,MAAsB,EAAhBzE,KAAKC,UAHc,yBAG3CyE,MAAM,EAHqC,+CAK/CC,aAAc5G,EAAiB,eAAe,oBAAA2B,EAAAC,OAAA,kEAAAD,EAAA,MAEpCF,EAAY,gDAAiD,IAFzB,uCAG1CkF,MAAM,EAAG,MAHiC,yCAYhD,OAAO,eACFpG,EADL,CAEEW,SAPe,WACfX,EAAWiF,aAAatE,WACxBX,EAAWqG,aAAa1F,cAWmB2F,KAFZ,mBAE1BtG,EAF0B,KAG3BuG,GAH2B,KAGjB,CACdvG,aACAkG,aAEF,OACE,kBAAC,IAAMM,WAAP,KACE,yBAAK3E,UAAU,OACb,kBAACD,EAAD,MACA,kBAAC,IAAD,CACE6E,kBAAmB,SAAAhE,GAEjB,OADAJ,QAAQ2B,IAAIvB,EAAMnC,OACX,uDAGT,kBAACwF,EAAYY,SAAb,CAAsBvG,MAAOoG,GAC3B,kBAAC,WAAD,CAAUxD,SAAU,gDAClB,yBAAKlB,UAAU,gBACb,kBAAC,WAAD,CACEkB,SACE,yBAAKlB,UAAU,iBAAf,uBAGF,kBAACiD,EAAD,a,MCtDlB,GADmB6B,OAAOC,SAASC,SAASC,SAAS,wBAEnDC,IAASC,OAAO,kBAACf,EAAD,MAASgB,SAASC,eAAe,aAC5C,CACL,IAAMC,EAAcF,SAASC,eAAe,QAC5CH,IAASK,WAAWD,GAAaH,OAC/B,kBAAC,IAAMR,WAAP,KACE,kBAACP,EAAD,W","file":"static/js/main.ae969f48.chunk.js","sourcesContent":["const dataSourceCache = new Map();\n\nexport default function createDataSource(fetchId, fetch) {\n  const getData = (key, input) => {\n    if (!dataSourceCache.has(key)) {\n      const dataSource = {\n        promise: fetch(input),\n        status: \"pending\",\n        value: null\n      };\n      dataSource.promise.then(\n        data => {\n          dataSource.status = \"resolved\";\n          dataSource.value = data;\n        },\n        error => {\n          dataSource.status = \"error\";\n          dataSource.value = error;\n        }\n      );\n      dataSourceCache.set(key, dataSource);\n    }\n  };\n\n  const dataSource = {\n    read(input) {\n      const key = `${fetchId}:${input}`;\n      getData(key, input);\n      const result = dataSourceCache.get(key);\n      switch (result.status) {\n        case \"pending\": {\n          const suspender = result.promise;\n          throw suspender;\n        }\n        case \"resolved\": {\n          const value = result.value;\n          return value;\n        }\n        case \"error\": {\n          const error = result.value;\n          throw error;\n        }\n\n        default:\n          return undefined;\n      }\n    },\n    prefetch(input) {\n      const key = `${fetchId}:${input}`;\n      getData(key, input);\n    }\n  };\n  return dataSource;\n}\n","export function promiseTimeout(time) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      resolve(time);\n    }, time);\n  });\n}\n\nconst extraTime = 0;\nexport const customFetch = async (url, timeout = extraTime) => {\n  const response = await fetch(url);\n  const jsonData = await response.json();\n  await promiseTimeout(timeout + Math.random() * 1000);\n  return jsonData;\n};\n","import React from \"react\";\nimport \"./style.scss\";\nexport default function Header() {\n  return (\n    <div className=\"wrapper-header\">\n      <h2> Concurrent Mode Example</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.scss\";\nexport default function Loader() {\n  return <div className=\" loader\" />;\n}\n","import React from \"react\";\nimport createDataSource from \"./cacheApi\";\nimport \"../styles.scss\";\n\nexport function cacheImage(source) {\n  const resource = createDataSource(source, () => {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.onload = () => {\n        resolve(source);\n      };\n      image.onerror = error => {\n        console.error(error);\n        resolve(error);\n      };\n      image.src = source;\n    });\n  });\n  return resource;\n}\n\nexport const loadImage = source => {\n  cacheImage(source).read();\n};\nexport default function MySuspenseImage(props) {\n  const { src } = props;\n  if (src != null) {\n    loadImage(src);\n  }\n  return (\n    <img\n      className=\"suspense-image\"\n      src={props.src}\n      alt={props.alt}\n      onClick={props.onClick ? props.onClick : undefined}\n    />\n  );\n}\n\n/** @ExperimentalCode  */\n\n// const imagePromise = new Promise(resolve => {\n//   console.log(\"source :\", source);\n//   const image = new Image();\n\n//   image.onload = () => {\n//     resolve(source);\n//   };\n//   image.onerror=(error)=> {\n//     console.error(error);\n//     resolve(error);\n//   }\n//   image.src = source;\n// });\n\n// return handlePromise(imagePromise);\n\n// function handlePromise(promise) {\n//   let status = \"pending\";\n//   let result;\n//   // console.log(\"promise\", promise);\n\n//   let suspender = promise.then(\n//     res => {\n//       status = \"success\";\n//       result = res.target;\n//     },\n//     err => {\n//       status = \"error\";\n//       result = err;\n//     }\n//   );\n\n//   return {\n//     read() {\n//       if (status === \"pending\") {\n//         throw suspender;\n//       } else if (status === \"error\") {\n//         throw result;\n//       } else {\n//         return result;\n//       }\n//     }\n//   };\n// }\n","import React, { Suspense } from \"react\";\n\nimport Loader from \"../Loader\";\n\nimport \"./style.scss\";\nimport MySuspenseImage from \"../../utils/imageCache\";\n\nexport default function UserCard(props) {\n  return (\n    <div\n      className={`wrapper-user-cards ${\n        props.isSelected ? \"wrapper-user-cards--active\" : \"\"\n      } `}\n    >\n      <div>\n        <Suspense\n          fallback={\n            <div\n              className={`user-thumbnail ${\n                props.isSelected ? \"user-thumbnail--active\" : \"\"\n              } `}\n            >\n              <Loader />\n            </div>\n          }\n        >\n          <div\n            className={`user-thumbnail ${\n              props.isSelected ? \"user-thumbnail--active\" : \"\"\n            } `}\n          >\n            <MySuspenseImage\n              src={`https://i.pravatar.cc/256?img=${props.userData.id + 5}`}\n              alt=\"user-dp\"\n              onClick={() => {\n                props.handleUserData(props.userData.id);\n              }}\n            />\n          </div>\n        </Suspense>\n      </div>\n      <div className=\"user-data\">\n        <div>\n          {props.userData.name}\n          <span>{props.userData.userName}</span>\n        </div>\n      </div>\n      <div>\n        {props.isPending ? (\n          <div className=\"wrapper-loader\">\n            <Loader />{\" \"}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.scss\";\n\nexport default function(props) {\n  const comments = props.data.posts.read();\n\n  return (\n    <div className=\"wrapper-comments\">\n      {comments.map((comment, index) => {\n        return (\n          <div className=\"comment-card\">\n            <div className=\"comment-data\">{comment.body}</div>\n            <div className=\"comment-by\">{comment.email}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { Suspense, useState, SuspenseList, useEffect } from \"react\";\n\nimport createDataSource from \"../../utils/cacheApi\";\nimport { customFetch } from \"../../utils/service\";\n\nimport CommentsCard from \"../CommentsCard\";\nimport Loader from \"../Loader\";\nimport \"./style.scss\";\nimport MySuspenseImage from \"../../utils/imageCache\";\n\nexport const loadUserPosts = userId => {\n  const dataSource = {\n    posts: createDataSource(`posts:${userId}`, async () => {\n      return await customFetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${userId}`,\n        600\n      );\n    })\n  };\n\n  return { ...dataSource };\n};\n\nexport default function UserProfile(props) {\n  const data = props.userData;\n  console.log(\"props\", props);\n  const [postData, setPosts] = useState(loadUserPosts(props.userId));\n\n  console.log(\"id :\", props.userId + 5);\n  useEffect(() => {\n    setPosts(loadUserPosts(props.userId));\n  }, [props.userId]);\n\n  return (\n    <div className=\"wrapper-user-profile\">\n      <div className=\"profile\">\n        <SuspenseList revealOrder=\"forwards\" tail=\"collapsed\">\n          <div className=\"profile-top-section\">\n            <Suspense\n              fallback={\n                <div className=\"user-image\">\n                  <Loader />\n                </div>\n              }\n            >\n              <div className=\"user-image\">\n                <MySuspenseImage\n                  src={`https://i.pravatar.cc/256?img=${props.userId + 5}`}\n                  alt=\"user-dp\"\n                />\n              </div>\n            </Suspense>\n\n            <Suspense\n              fallback={\n                <div>\n                  <b>loading userDetails....</b>\n                  <Loader />\n                </div>\n              }\n            >\n              <UserDetails data={data} />\n            </Suspense>\n          </div>\n          <div className=\"comments-section\">\n            <Suspense\n              fallback={\n                <div>\n                  <b> loading user posts ....</b>\n                  <Loader />\n                </div>\n              }\n            >\n              <CommentsCard data={postData} />\n            </Suspense>\n          </div>\n        </SuspenseList>\n      </div>\n    </div>\n  );\n}\n\nfunction UserDetails(props) {\n  const user = props.data.user.read();\n\n  console.log(user);\n\n  return (\n    <div className=\"user-details\">\n      <div>name :{user.name}</div>\n      <div>email :{user.email}</div>\n      <div>company :{user.company.name} </div>\n    </div>\n  );\n}\n","import React, {\n  useCallback,\n  useTransition,\n  useState,\n  Suspense,\n  useEffect\n} from \"react\";\n\nimport UserCard from \"../UserCard\";\nimport { useData } from \"../../App\";\nimport \"./style.scss\";\nimport createDataSource from \"../../utils/cacheApi\";\nimport { customFetch } from \"../../utils/service\";\nimport UserProfile from \"../UserProfile\";\n\nimport Loader from \"../Loader\";\n\nexport const loadUserData = userId => {\n  console.log(\"loading userData... \", userId);\n  const dataSource = {\n    user: createDataSource(`user:${userId}`, async () => {\n      return await customFetch(\n        `https://jsonplaceholder.typicode.com/users/${userId}`,\n        2000\n      );\n    })\n  };\n\n  return { ...dataSource };\n};\n\nexport const SUSPENSE_CONFIG = { timeoutMs: 3000 };\n\nexport default function ActiveUsersList(props) {\n  const { dataSource } = useData();\n  const friends = dataSource.userListData.read();\n  const [data, setData] = useState(loadUserData(1));\n  const [startTransition, isPending] = useTransition(SUSPENSE_CONFIG);\n\n  useEffect(() => console.log(\"FINISHED RENDERING\", Date.now()), []);\n\n  const [activeUserId, setActiveUserId] = useState(1);\n  const [userId, handleActiveUserId] = useState();\n\n  const setUserData = useCallback(\n    id => {\n      console.log(\"setUserData id :\", id);\n      handleActiveUserId(id);\n\n      startTransition(() => {\n        setActiveUserId(id);\n        setData(loadUserData(id));\n      });\n    },\n    [startTransition]\n  );\n\n  console.log(\"isPending\", isPending);\n\n  console.log(\"isPending --> re-render:\", data);\n\n  console.log(\"activeUserId :\", activeUserId);\n  return (\n    <div className=\"wrapper-user-list\">\n      <div className=\"friend-list\">\n        {friends.map((friend, index) => {\n          return (\n            <div className=\"user-list-item\">\n              <Suspense\n                fallback={\n                  <div>\n                    Loading friend <Loader />{\" \"}\n                  </div>\n                }\n              >\n                <UserCard\n                  isSelected={friend.id === userId ? true : false}\n                  userData={friend}\n                  thumbnailUrl={`https://i.pravatar.cc/256?img=${friend.id +\n                    5}`}\n                  handleUserData={setUserData}\n                  isPending={isPending && friend.id === userId}\n                />\n              </Suspense>\n            </div>\n          );\n        })}\n      </div>\n      {data && (\n        <Suspense fallback={Loader}>\n          <div className=\"user-profile-section\">\n            <UserProfile userData={data} userId={activeUserId} />\n          </div>\n        </Suspense>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nconst SearchBar = props => {\n  const onChange = useCallback(\n    e => {\n      console.log(e.target.value);\n      if (props.onChange) {\n        props.onChange(e.target.value);\n      }\n    },\n    [props]\n  );\n\n  return (\n    <div className=\"wrapper-search-bar\">\n      <input\n        className=\"search-bar\"\n        placeholder=\"search comments\"\n        onChange={onChange}\n        value={props.value}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { Suspense, useState, createContext, useContext } from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport createDataSource from \"./utils/cacheApi\";\nimport { customFetch } from \"./utils/service\";\nimport Header from \"./components/Header\";\nimport ActiveUsersList from \"./components/ActiveUserList\";\nimport FilterList from \"./components/FilterList\";\nimport \"./styles.scss\";\n\nconst DataContext = createContext(null);\nexport const useData = () => useContext(DataContext);\n\nconst makeDataSource = userId => {\n  const dataSource = {\n    userListData: createDataSource(\"userListData\", async () => {\n      return (\n        await customFetch(\"https://jsonplaceholder.typicode.com/users\", 0)\n      ).slice(0, 6 + Math.floor(Math.random() * 5));\n    }),\n    commentsList: createDataSource(\"commentList\", async () => {\n      return (\n        await customFetch(\"https://jsonplaceholder.typicode.com/comments\", 0)\n      ).slice(0, 100);\n    })\n  };\n\n  const prefetch = () => {\n    dataSource.userListData.prefetch();\n    dataSource.commentsList.prefetch();\n  };\n\n  return {\n    ...dataSource,\n    prefetch\n  };\n};\n\nexport default function App(props) {\n  const [friendId, setFriendId] = useState(1);\n  const [dataSource, setDataSource] = useState(makeDataSource(friendId));\n  const context = {\n    dataSource,\n    friendId\n  };\n  return (\n    <React.StrictMode>\n      <div className=\"app\">\n        <Header />\n        <ErrorBoundary\n          FallbackComponent={props => {\n            console.log(props.error);\n            return <div> Error loading data </div>;\n          }}\n        >\n          <DataContext.Provider value={context}>\n            <Suspense fallback={<div> loading .....</div>}>\n              <div className=\"wrapper-home\">\n                <Suspense\n                  fallback={\n                    <div className=\"loading-users\"> Loading users ...</div>\n                  }\n                >\n                  <ActiveUsersList />\n                  {/* <FilterList commentsList={dataSource.commentsList} /> */}\n                </Suspense>\n              </div>\n            </Suspense>\n          </DataContext.Provider>\n        </ErrorBoundary>\n      </div>\n    </React.StrictMode>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport AppBootUp from \"./containers/AppBootUp\";\nimport \"./assets/styles/bootstrap/bootstrap.scss\";\nimport App from \"./App\";\n\nconst normalMode = window.location.pathname.includes(\"/normal-mode-example\");\nif (normalMode) {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n} else {\n  const rootElement = document.getElementById(\"root\");\n  ReactDOM.createRoot(rootElement).render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\n"],"sourceRoot":""}