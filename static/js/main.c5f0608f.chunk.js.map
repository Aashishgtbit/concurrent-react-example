{"version":3,"sources":["utils/cacheApi.js","utils/service.js","components/Header/index.js","utils/imageCache.js","components/Loader/index.jsx","components/UserCard/index.jsx","components/CommentsCard/index.jsx","components/UserProfile/index.jsx","components/ActiveUserList/index.jsx","App.jsx","routes/index.js","index.jsx","containers/AppBootUp/index.jsx"],"names":["dataSourceCache","Map","createDataSource","fetchId","fetch","getData","key","input","has","dataSource","promise","status","value","then","data","error","set","read","result","get","prefetch","promiseTimeout","time","Promise","resolve","reject","setTimeout","customFetch","url","a","async","timeout","response","json","jsonData","Math","random","Header","className","cacheImage","source","suspender","res","target","err","handlePromise","console","log","image","Image","src","onload","Loader","UserCard","props","useState","imageCache","userData","id","imageData","fallback","Thumbnail","imgData","onClick","handleUserData","name","userName","isPending","alt","comments","posts","map","comment","index","body","email","loadUserPosts","userId","UserProfile","postData","setPosts","loadImageData","useEffect","revealOrder","UserImage","UserDetails","CommentsCard","user","company","loadUserData","SUSPENSE_CONFIG","timeoutMs","withRouter","useData","friends","friendId","userListData","setData","useTransition","startTransition","activeUserId","setActiveUserId","setUserData","useCallback","friend","thumbnailUrl","DataContext","createContext","useContext","routesConfig","path","component","floor","slice","makeDataSource","context","FallbackComponent","Provider","Routes","config","exact","render","history","match","location","rootElement","document","getElementById","ReactDOM","createRoot"],"mappings":"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","file":"static/js/main.c5f0608f.chunk.js","sourcesContent":["const dataSourceCache = new Map();\n\nexport default function createDataSource(fetchId, fetch) {\n  // console.log(\"createDataSource\", [fetchId, fetch]);\n  const getData = (key, input) => {\n    if (!dataSourceCache.has(key)) {\n      const dataSource = {\n        promise: fetch(input),\n        status: \"pending\",\n        value: null\n      };\n      dataSource.promise.then(\n        data => {\n          dataSource.status = \"resolved\";\n          dataSource.value = data;\n        },\n        error => {\n          dataSource.status = \"error\";\n          dataSource.value = error;\n        }\n      );\n      dataSourceCache.set(key, dataSource);\n    }\n  };\n\n  const dataSource = {\n    read(input) {\n      // console.log(input);\n      const key = `${fetchId}:${input}`;\n      getData(key, input);\n      const result = dataSourceCache.get(key);\n      // console.log(\"result :\", result);\n\n      switch (result.status) {\n        case \"pending\": {\n          const suspender = result.promise;\n          throw suspender;\n        }\n        case \"resolved\": {\n          const value = result.value;\n          return value;\n        }\n        case \"error\": {\n          const error = result.value;\n          throw error;\n        }\n\n        default:\n          // unexpected case ...\n          return undefined;\n      }\n    },\n    prefetch(input) {\n      const key = `${fetchId}:${input}`;\n      getData(key, input);\n    }\n  };\n  return dataSource;\n}\n","export function promiseTimeout(time) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      resolve(time);\n    }, time);\n  });\n}\n\nconst extraTime = 0;\nexport const customFetch = async (url, timeout = extraTime) => {\n  const response = await fetch(url);\n  const jsonData = await response.json();\n  await promiseTimeout(timeout + Math.random() * 1000);\n  return jsonData;\n};\n","import React from \"react\";\nimport \"./style.scss\";\nexport default function Header() {\n  return (\n    <div className=\"wrapper-header\">\n      <h2> Concurrent React Example</h2>\n    </div>\n  );\n}\n","export default function cacheImage(source) {\n  const imagePromise = new Promise(resolve => {\n    console.log(\"source :\", source);\n    const image = new Image();\n    image.src = source;\n    image.onload = resolve;\n    return image;\n  });\n\n  return handlePromise(imagePromise);\n}\nfunction handlePromise(promise) {\n  let status = \"pending\";\n  let result;\n  // console.log(\"promise\", promise);\n\n  let suspender = promise.then(\n    res => {\n      status = \"success\";\n      result = res.target;\n    },\n    err => {\n      status = \"error\";\n      result = err;\n    }\n  );\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else {\n        return result;\n      }\n    }\n  };\n}\n","import React from \"react\";\nimport \"./style.scss\";\nexport default function Loader() {\n  return <div className=\" loader\" />;\n}\n","import React, { useState, Suspense } from \"react\";\n\nimport imageCache from \"../../utils/imageCache\";\nimport Loader from \"../Loader\";\n\nimport \"./style.scss\";\n\nexport default function UserCard(props) {\n  const [imageData, loadImageData] = useState(\n    imageCache(`https://i.pravatar.cc/256?img=${props.userData.id + 5}`)\n  );\n  return (\n    <div className=\"wrapper-user-cards\">\n      <div>\n        <Suspense\n          fallback={\n            <div className=\"user-thumbnail\">\n              <Loader />\n            </div>\n          }\n        >\n          <Thumbnail\n            imgData={imageData}\n            onClick={() => {\n              props.handleUserData(props.userData.id);\n            }}\n          />\n        </Suspense>\n      </div>\n      <div className=\"user-data\">\n        <div>\n          {props.userData.name}\n          <span>{props.userData.userName}</span>\n        </div>\n        {/* <div>{props.userData.company.name}</div> */}\n      </div>\n      <div>\n        {props.isPending ? (\n          <div className=\"wrapper-loader\">\n            <Loader />{\" \"}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nfunction Thumbnail({ imgData, onClick }) {\n  const data = imgData.read();\n\n  return (\n    <img\n      className=\"user-thumbnail\"\n      src={data.src}\n      alt=\"user-dp\"\n      onClick={onClick}\n    />\n  );\n}\n","import React from \"react\";\nimport \"./style.scss\";\n\nexport default function(props) {\n  const comments = props.data.posts.read();\n\n  return (\n    <div className=\"wrapper-comments\">\n      {comments.map((comment, index) => {\n        return (\n          <div className=\"comment-card\">\n            <div className=\"comment-data\">{comment.body}</div>\n            <div className=\"comment-by\">{comment.email}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { Suspense, useState, SuspenseList, useEffect } from \"react\";\nimport { loadUserData } from \"../ActiveUserList\";\nimport Header from \"../../components/Header\";\nimport createDataSource from \"../../utils/cacheApi\";\nimport { customFetch } from \"../../utils/service\";\nimport imageCache from \"../../utils/imageCache\";\nimport CommentsCard from \"../CommentsCard\";\nimport Loader from \"../Loader\";\nimport \"./style.scss\";\n\nexport const loadUserPosts = userId => {\n  const dataSource = {\n    posts: createDataSource(`posts:${userId}`, async () => {\n      return await customFetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${userId}`,\n        600\n      );\n    })\n  };\n\n  return { ...dataSource };\n};\n\nexport default function UserProfile(props) {\n  const data = props.userData;\n  console.log(\"props\", props);\n  const [postData, setPosts] = useState(loadUserPosts(props.userId));\n  const [imgData, loadImageData] = useState(\n    imageCache(`https://i.pravatar.cc/256?img=${props.userId + 5}`)\n  );\n  console.log(\"id :\", props.userId + 5);\n  useEffect(() => {\n    loadImageData(\n      imageCache(`https://i.pravatar.cc/256?img=${props.userId + 5}`)\n    );\n    setPosts(loadUserPosts(props.userId));\n  }, [props.userId]);\n\n  return (\n    <div className=\"wrapper-user-profile\">\n      <div className=\"profile\">\n        <SuspenseList revealOrder=\"forwards\">\n          <div className=\"profile-top-section\">\n            <Suspense\n              fallback={\n                <div className=\"user-image\">\n                  <Loader />\n                </div>\n              }\n            >\n              <UserImage imageData={imgData} />\n            </Suspense>\n\n            <Suspense\n              fallback={\n                <div>\n                  loading userDetails....\n                  <Loader />\n                </div>\n              }\n            >\n              <UserDetails data={data} />\n            </Suspense>\n          </div>\n          <div className=\"comments-section\">\n            <Suspense\n              fallback={\n                <div>\n                  loading user posts ....\n                  <Loader />\n                </div>\n              }\n            >\n              <CommentsCard data={postData} />\n            </Suspense>\n          </div>\n        </SuspenseList>\n      </div>\n    </div>\n  );\n}\n\nfunction UserDetails(props) {\n  const user = props.data.user.read();\n\n  console.log(user);\n\n  return (\n    <div className=\"user-details\">\n      <div>name :{user.name}</div>\n      <div>email :{user.email}</div>\n      <div>company :{user.company.name} </div>\n    </div>\n  );\n}\n\nfunction UserImage({ imageData }) {\n  const data = imageData.read();\n  console.log(\"data : \", data);\n  return <img className=\"user-image\" src={data.src} alt=\"user-dp\" />;\n}\n","import React, {\n  useContext,\n  useCallback,\n  useTransition,\n  useState,\n  useMemo,\n  Suspense,\n  useEffect\n} from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserCard from \"../UserCard\";\nimport { useData } from \"../../App\";\nimport \"./style.scss\";\nimport createDataSource from \"../../utils/cacheApi\";\nimport { customFetch } from \"../../utils/service\";\nimport UserProfile, { loadUserPosts } from \"../UserProfile\";\nimport { resolve } from \"url\";\nimport { reject } from \"q\";\nimport Loader from \"../Loader\";\n\nexport const loadUserData = userId => {\n  console.log(\"loading userData... \", userId);\n  const dataSource = {\n    user: createDataSource(`user:${userId}`, async () => {\n      return await customFetch(\n        `https://jsonplaceholder.typicode.com/users/${userId}`,\n        2000\n      );\n    })\n  };\n\n  return { ...dataSource };\n};\n\nexport const SUSPENSE_CONFIG = { timeoutMs: 3000 };\n\nexport default withRouter(function ActiveUsersList(props) {\n  const { dataSource, friendId } = useData();\n  const friends = dataSource.userListData.read();\n  const [data, setData] = useState(loadUserData(1));\n  const [startTransition, isPending] = useTransition(SUSPENSE_CONFIG);\n\n  const [activeUserId, setActiveUserId] = useState(1);\n\n  const setUserData = useCallback(\n    id => {\n      console.log(\"setUserData id :\", id);\n      setActiveUserId(id);\n      startTransition(() => {\n        console.log(\"startTransition  called \");\n        setData(loadUserData(id));\n      });\n    },\n    [startTransition]\n  );\n\n  console.log(\"isPending\", isPending);\n\n  console.log(\"isPending --> re-render:\", data);\n\n  console.log(\"activeUserId :\", activeUserId);\n  return (\n    <div className=\"wrapper-user-list\">\n      <div className=\"friend-list\">\n        {friends.map((friend, index) => {\n          return (\n            <div className=\"user-list-item\">\n              <UserCard\n                userData={friend}\n                thumbnailUrl={`https://i.pravatar.cc/256?img=${friend.id + 5}`}\n                handleUserData={setUserData}\n                isPending={isPending && friend.id === activeUserId}\n              />\n            </div>\n          );\n        })}\n      </div>\n      {data && (\n        <Suspense fallback={Loader}>\n          <div className=\"user-profile-section\">\n            <UserProfile userData={data} userId={activeUserId} />\n          </div>\n        </Suspense>\n      )}\n    </div>\n  );\n});\n","import React, { Suspense, useState, createContext, useContext } from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport createDataSource from \"./utils/cacheApi\";\nimport { customFetch } from \"./utils/service\";\nimport Header from \"./components/Header\";\nimport ActiveUsersList from \"./components/ActiveUserList\";\nimport \"./styles.scss\";\n\nconst DataContext = createContext(null);\nexport const useData = () => useContext(DataContext);\n\nconst makeDataSource = userId => {\n  const dataSource = {\n    userListData: createDataSource(\"userListData\", async () => {\n      return (\n        await customFetch(\"https://jsonplaceholder.typicode.com/users\", 0)\n      ).slice(0, 6 + Math.floor(Math.random() * 5));\n    })\n  };\n\n  const prefetch = () => {\n    dataSource.userListData.prefetch();\n  };\n\n  return {\n    ...dataSource,\n    prefetch\n  };\n};\n\nexport default function App(props) {\n  const [friendId, setFriendId] = useState(1);\n  const [dataSource, setDataSource] = useState(makeDataSource(friendId));\n  const context = {\n    dataSource,\n    friendId\n  };\n  return (\n    <div className=\"app\">\n      <Header />\n      <ErrorBoundary\n        FallbackComponent={props => {\n          console.log(props.error);\n          return <div> Error loading data </div>;\n        }}\n      >\n        <DataContext.Provider value={context}>\n          <Suspense fallback={<div> loading /.....</div>}>\n            <div className=\"wrapper-home\">\n              <Suspense\n                fallback={\n                  <div className=\"loading-users\"> Loading users ...</div>\n                }\n              >\n                <ActiveUsersList />\n              </Suspense>\n            </div>\n          </Suspense>\n        </DataContext.Provider>\n      </ErrorBoundary>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, BrowserRouter, HashRouter, Switch } from \"react-router-dom\";\nimport App from \"../App\";\nimport UserProfile from \"../components/UserProfile\";\n\nconst routesConfig = [\n  {\n    path: \"/\",\n    component: App,\n    name: \"Home Page\"\n  },\n  {\n    path: \"/:userId\",\n    component: UserProfile\n  }\n];\n\nexport default function Routes() {\n  return (\n    <HashRouter>\n      <Switch>\n        {routesConfig.map(config => {\n          return (\n            <Route\n              exact\n              key={config.name}\n              path={config.path}\n              render={({ history, match, location }) => (\n                <config.component\n                  history={history}\n                  match={match}\n                  location={location}\n                />\n              )}\n            />\n          );\n        })}\n      </Switch>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport AppBootUp from \"./containers/AppBootUp\";\nimport \"./assets/styles/bootstrap/bootstrap.scss\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.createRoot(rootElement).render(<AppBootUp />);\n","import React from \"react\";\nimport Routes from \"../../routes\";\n\nexport default function AppBootUp() {\n  return <Routes />;\n}\n"],"sourceRoot":""}